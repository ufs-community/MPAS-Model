name: CI test to build MPAS Standalone

on: [pull_request,workflow_dispatch,push]

jobs:
  build_mpas:

    # The type of runner that the job will run on
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        fortran-compiler: [gfortran-10, gfortran-11, gfortran-12]

    # Environmental variables
    env:
      NFHOME:      /usr
      NFVERSION:   v4.5.3
      driver_ROOT: /home/runner/work/template/template

    # Workflow steps
    steps:

    - name: Checkout code (into ${driver_ROOT})
      uses: actions/checkout@v3

    # NetCDF C and FORTRAN libraries
    - name: Install NetCDF library
      run: |
        sudo apt-get update
        sudo apt-get install libnetcdff-dev

    - name: Cache openmpi
      id: cache-openmpi
      uses: actions/cache@v4
      with:
        path: /home/runner/ompi-4.1.6
        key: cache-openmpi-${{matrix.fortran-compiler}}-key

    - name: Install openmpi
      if: steps.cache-openmpi.outputs.cache-hit != 'true'
      run: |
        wget https://github.com/open-mpi/ompi/archive/refs/tags/v4.1.6.tar.gz
        tar -xvf v4.1.6.tar.gz
        cd ompi-4.1.6
        ./autogen.pl
        ./configure --prefix=/home/runner/ompi-4.1.6
        make -j4
        make install
        echo "LD_LIBRARY_PATH=/home/runner/ompi-4.1.6/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV
        echo "PATH=/home/runner/ompi-4.1.6/bin:$PATH" >> $GITHUB_ENV

    - name: Build GNU autotools
      run: |
        echo "LD_LIBRARY_PATH=/home/runner/AUTOTOOLS/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV
        echo "PATH=/home/runner/AUTOTOOLS/bin:$PATH" >> $GITHUB_ENV
        cd ${GITHUB_WORKSPACE}
        wget -q https://ftp.gnu.org/gnu/m4/m4-${M4_VERSION}.tar.gz
        gzip -dc m4-${M4_VERSION}.tar.gz | tar -xf -
        cd m4-${M4_VERSION}
        ./configure --prefix=${GITHUB_WORKSPACE}/AUTOTOOLS --silent
        make -s -j 8 install > qout 2>&1
        make -s -j 8 distclean >> qout 2>&1
        cd ${GITHUB_WORKSPACE}
        wget -q https://ftp.gnu.org/gnu/autoconf/autoconf-${AUTOCONF_VERSION}.tar.gz
        gzip -dc autoconf-${AUTOCONF_VERSION}.tar.gz | tar -xf -
        cd autoconf-${AUTOCONF_VERSION}
        ./configure --prefix=${GITHUB_WORKSPACE}/AUTOTOOLS --silent
        make -s -j 8 install > qout 2>&1
        make -s -j 8 distclean >> qout 2>&1
        cd ${GITHUB_WORKSPACE}
        wget -q https://ftp.gnu.org/gnu/automake/automake-${AUTOMAKE_VERSION}.tar.gz
        gzip -dc automake-${AUTOMAKE_VERSION}.tar.gz | tar -xf -
        cd automake-${AUTOMAKE_VERSION}
        ./configure --prefix=${GITHUB_WORKSPACE}/AUTOTOOLS --silent
        make -s -j 8 install > qout 2>&1
        make -s -j 8 distclean >> qout 2>&1
        cd ${GITHUB_WORKSPACE}
        wget -q https://ftp.gnu.org/gnu/libtool/libtool-${LIBTOOL_VERSION}.tar.gz
        gzip -dc libtool-${LIBTOOL_VERSION}.tar.gz | tar -xf -
        cd libtool-${LIBTOOL_VERSION}
        ./configure --prefix=${GITHUB_WORKSPACE}/AUTOTOOLS --silent
        make -s -j 8 install > qout 2>&1
        make -s -j 8 distclean >> qout 2>&1

    # PNetCDF library
    - name: Install PnetCDF
      run: |
        set -x
        cd ${GITHUB_WORKSPACE}
        echo "LD_LIBRARY_PATH=/home/runner/AUTOTOOLS/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV
        echo "PATH=/home/runner/AUTOTOOLS/bin:$PATH" >> $GITHUB_ENV
        m4 --version
        autoconf --version
        automake --version
        libtool --version
        echo "Install PnetCDF on ${GITHUB_WORKSPACE}/PnetCDF"
        rm -rf PnetCDF ; mkdir PnetCDF ; cd PnetCDF
        git clone -q https://github.com/Parallel-NetCDF/PnetCDF.git
        cd PnetCDF
        autoreconf -i
        ./configure --prefix=${GITHUB_WORKSPACE}/PnetCDF \
                    --silent \
                    --disable-fortran \
                    --disable-cxx \
                    --disable-shared \
                    --with-mpi=${GITHUB_WORKSPACE}/ompi-4.1.6
        make -s LIBTOOLFLAGS=--silent V=1 -j 8 install > qout 2>&1
        make -s distclean >> qout 2>&1

    # PIO library

    # Download any dependencies?

    # Build MPAS-A 